@model CMS.Application.Products.Dtos.EditProductDto

@{
    ViewData["Title"] = "ویرایش";
}

<h1>ایجاد</h1>

<h4>محصول</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-area="Admin" asp-controller="Products" asp-action="Edit" enctype="multipart/form-data">

            <div asp-validation-summary="All" class="text-danger"></div>

            <div class="form-group mb-3">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" id="ProductName" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Slug" class="control-label"></label>
                <input asp-for="Slug" class="form-control" id="ProductSlug" readonly />
                <span asp-validation-for="Slug" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Decription" class="control-label"></label>
                <textarea asp-for="Decription" id="Decription" class="form-control"></textarea>
                <span asp-validation-for="Decription" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="CategoryId" class="control-label">دسته بندی</label>
                <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.Categories">
                    <option value="0">یک دسته بندی انتخاب کنید</option>
                </select>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>

            <!-- بخش انتخاب و پیش نمایش تصویر -->
            <div class="form-group mb-3">
                <label asp-for="Image" class="control-label"></label>
                <input asp-for="ImageUpload" type="file" id="imageUpload" class="form-control" accept="image/*">
                <span asp-validation-for="Image" class="text-danger"></span>
                <button type="button" id="previewBtn" class="btn btn-secondary mt-2" style="display: none;" data-bs-toggle="modal" data-bs-target="#imageModal">
                    پیش‌نمایش تصویر
                </button>
            </div>

            <div class="form-group mb-3">
                <label class="control-label"></label>
                <img src="@Url.Content("~/Media/Products/")@Model.Image" width="200" />
                <span asp-validation-for="Image" class="text-danger"></span>
            </div>

            <input type="hidden" asp-for="Image"/>

            <div class="form-group">
                <button type="submit" class="btn btn-primary">ویرایش</button>
            </div>

        </form>
    </div>
</div>

<!-- مدال برای نمایش تصویر -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="imageModalLabel">پیش‌نمایش تصویر</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <img id="imagePreview" src="#" class="img-fluid" alt="پیش‌نمایش تصویر">
            </div>
        </div>
    </div>
</div>

<div>
    <a asp-action="Index">بازگشت به صفحه لیست</a>
</div>

<h1>آپلود تصاویر محصول</h1>
<form action="/Upload/ProductImages" class="dropzone" id="dropzone-upload"> 
    <div class="fallback">
        <input name="file" type="file" multiple />
    </div>
</form>

@section Scripts {
    
    <script src="https://unpkg.com/dropzone@5/dist/min/dropzone.min.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/dropzone@5/dist/min/dropzone.min.css" type="text/css" />

    <script>
        Dropzone.options.dropzoneUpload = {
            acceptedFiles: "image/*",
            maxFiles: 10,
            init: function() {
                this.on("success", function(file, response) {
                    console.log("فایل با موفقیت آپلود شد:", response);
                    // Handle successful upload, e.g., display uploaded image paths
                });

                this.on("error", function(file, errorMessage) {
                    console.error("خطا در آپلود فایل:", errorMessage);
                    alert("خطا در آپلود فایل: " + errorMessage); // Display error to user
                });
            }
        };
    </script>

    @* فعال‌سازی اعتبارسنجی *@
    <partial name="_ValidationScriptsPartial" />

    @* فعال‌سازی CKEditor برای توضیحات *@
    <script src="https://cdn.ckeditor.com/4.22.1/standard/ckeditor.js"></script>
    <script>
        CKEDITOR.replace('Decription');4

        document.getElementById("imageUpload").addEventListener("change", function (event) {
            let file = event.target.files[0];
            if (file) {
                let reader = new FileReader();
                reader.onload = function (e) {
                    document.getElementById("imagePreview").src = e.target.result;
                    document.getElementById("previewBtn").style.display = "inline-block"; // نمایش دکمه پیش‌نمایش
                };
                reader.readAsDataURL(file);
            }
        });


         // تولید خودکار اسلاگ
            document.addEventListener("DOMContentLoaded", function () {
                let nameInput = document.getElementById("ProductName");
                let slugInput = document.getElementById("ProductSlug");

                nameInput.addEventListener("input", function () {
                    let slug = generateSlug(nameInput.value);
                    slugInput.value = slug;
                });

                function generateSlug(text) {
                    const persianToEnglish = {
                        'آ': 'a', 'ا': 'a', 'ب': 'b', 'پ': 'p', 'ت': 't', 'ث': 's', 'ج': 'j', 'چ': 'ch',
                        'ح': 'h', 'خ': 'kh', 'د': 'd', 'ذ': 'z', 'ر': 'r', 'ز': 'z', 'ژ': 'zh', 'س': 's',
                        'ش': 'sh', 'ص': 's', 'ض': 'z', 'ط': 't', 'ظ': 'z', 'ع': 'a', 'غ': 'gh', 'ف': 'f',
                        'ق': 'gh', 'ک': 'k', 'گ': 'g', 'ل': 'l', 'م': 'm', 'ن': 'n', 'و': 'v', 'ه': 'h', 'ی': 'i'
                    };

                    return text
                        .trim()
                        .toLowerCase()
                        .replace(/[\u0600-\u06FF]/g, function (char) {
                            return persianToEnglish[char] || char;
                        })
                        .replace(/\s+/g, '-') // جایگزینی فاصله‌ها با -
                        .replace(/[^a-z0-9-]/g, '') // حذف کاراکترهای غیرمجاز
                        .replace(/-+/g, '-'); // حذف -های تکراری
                }
            });
    </script>
}
